import { transports } from 'remixjs/project';


Component({
  options: { addGlobalClass: true },

  properties: {
    onMarkerTap: String,
		onLabelTap: String,
		onControlTap: String,
		onCalloutTap: String,
		onUpdated: String,
		onRegionChange: String,
		onPoiTap: String,
		uuid: String,
		styles: String,
		className: String,
		longitude: Number,
		latitude: Number,
		scale: Number,
		markers: Array,
		covers: Array,
		polyline: Array,
		circles: Array,
		controls: Array,
		includePoints: Array,
		showLocation: Boolean,
		polygons: Array,
		subkey: String,
		layerStyle: Number,
		rotate: Number,
		skew: Number,
		enable3D: Boolean,
		showCompass: Boolean,
		showScale: Boolean,
		enableOverlooking: Boolean,
		enableZoom: Boolean,
		enableScroll: Boolean,
		enableRotate: Boolean,
		enableSatellite: Boolean,
		enableTraffic: Boolean,
		setting: Object,
		
  },

  data: {
    onMarkerTap: null,
		onLabelTap: null,
		onControlTap: null,
		onCalloutTap: null,
		onUpdated: null,
		onRegionChange: null,
		onPoiTap: null,
		uuid: null,
		styles: null,
		className: null,
		longitude: null,
		latitude: null,
		scale: 16,
		markers: null,
		covers: null,
		polyline: null,
		circles: null,
		controls: null,
		includePoints: null,
		showLocation: false,
		polygons: null,
		subkey: null,
		layerStyle: 1,
		rotate: 0,
		skew: 0,
		enable3D: false,
		showCompass: false,
		showScale: false,
		enableOverlooking: false,
		enableZoom: false,
		enableScroll: false,
		enableRotate: false,
		enableSatellite: false,
		enableTraffic: false,
		setting: null,
		
  },

  methods: {
    onMarkerTap (e) { transports.view.dispatch('onMarkerTap', this.data.uuid, e); },
		onLabelTap (e) { transports.view.dispatch('onLabelTap', this.data.uuid, e); },
		onControlTap (e) { transports.view.dispatch('onControlTap', this.data.uuid, e); },
		onCalloutTap (e) { transports.view.dispatch('onCalloutTap', this.data.uuid, e); },
		onUpdated (e) { transports.view.dispatch('onUpdated', this.data.uuid, e); },
		onRegionChange (e) { transports.view.dispatch('onRegionChange', this.data.uuid, e); },
		onPoiTap (e) { transports.view.dispatch('onPoiTap', this.data.uuid, e); }
  },

  lifetimes: {
    created () { transports.view.dispatch('created', this.data.uuid); },
    attached () { transports.view.dispatch('attached', this.data.uuid); },
    detached () { transports.view.dispatch('detached', this.data.uuid); },
    ready () { transports.view.dispatch('ready', this.data.uuid); },
    moved () { transports.view.dispatch('moved', this.data.uuid); },
    error (error) { transports.view.dispatch('detached', this.data.uuid, error); }
  },
});
