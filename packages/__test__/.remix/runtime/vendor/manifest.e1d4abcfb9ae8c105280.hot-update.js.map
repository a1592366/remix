{"version":3,"file":"runtime/vendor/manifest.e1d4abcfb9ae8c105280.hot-update.js","sources":["webpack:///../remix/src/document/HTMLElement.js"],"sourcesContent":["import Element from './Element';\n\nfunction resolveDefaultProps (\n  defaultProps,\n  unresolvedProps\n) {\n  if (defaultProps) {\n    const props = {};\n    \n    for (let propName in defaultProps) {\n      let value;\n      if (unresolvedProps[propName] === undefined) {\n        value = defaultProps[propName];\n      } else {\n        value = unresolvedProps[propName];\n      }\n\n      if (!(value === null || value === undefined)) {\n        props[propName] = value;\n      }\n    }\n\n    return props;\n  }\n  \n  return {};\n}\n\nexport default class HTMLElement extends Element {\n  constructor (tagName) {\n    super();\n\n    this.tagName = tagName;\n    this.innerText = null;\n    // this.style = new StyleSheet(this);\n  }\n\n  set innerHTML (html) {\n    throw new Error('Sorry, innerHTML is not be supportted');\n  }\n\n  getElementById (id) {\n    if (this.uuid === id) {\n      return this;\n    }\n\n    let node = this.child;\n\n    while (node) {\n      if (node.uuid === id) {\n        return node;\n      }\n\n      if (node.child) {\n        node = node.child;\n      } else {\n        while (node.sibling === null) {\n          if (node.return === null) { \n            return null; \n          }\n      \n          node = node.return;\n        }\n      \n        node = node.sibling;\n      }\n    }\n  }\n\n  appendChild (child) {\n    child.previous = this.lastChild;\n    child.return = this;\n    child.parentNode = this;\n    \n    if (this.child === null) {\n      this.child = this.lastChild = child;\n    } else {\n      this.lastChild.sibling = child;\n      this.lastChild = child;\n    }    \n  }\n\n  removeChild (child) {\n    let node = this.child;\n    let prevNode = null;\n\n    while (node) {\n      if (child === node) {\n         if (node === this.child) {\n          this.child = node.sibling;\n         } else {\n          prevNode.sibling = node.sibling;\n         }\n      }\n\n      prevNode = node;\n      node = node.sibling;\n    }\n  }\n\n  insertBefore (child, beforeChild) {\n    if (this.child === beforeChild) {\n      this.child = child;\n    } else {\n      beforeChild.previous.sibling = child;\n    }\n\n    child.sibling = beforeChild;\n    beforeChild.previous = child;\n  }\n\n  getAttribute (name) {\n    return this[name];\n  }\n\n  setAttribute (name, value) {\n    this[name] = value;\n  }\n\n  removeAttribute (name) {\n    this[name] = null;\n  }\n\n  addEventListener () {}\n  removeEventListener () {}\n\n  toString () {\n    return `[object HTML${this.tagName}Element]`;\n  }\n\n  serialize () {\n    const defaultProps = this.constructor.defaultProps;\n    const element = resolveDefaultProps(defaultProps, this);\n\n    if (this.sibling) {\n      element.sibling = this.sibling.serialize();\n    } else {\n      element.sibling = this.sibling;\n    }\n\n    if (this.child) {\n      element.child = this.child.serialize();\n    } \n\n    if (this.innerText) {\n      element.innerText = this.innerText;\n    }\n\n    element.tagName = this.tagName;\n    element.uuid = this.uuid;\n\n    return element;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AALA;AAMA;AACA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;;;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAnHA;AACA;AACA;;;AAXA;AACA;;;;;;A","sourceRoot":""}