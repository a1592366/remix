import React from '../../../react';
import PropTypes from '../../../react/PropTypes';

import EventHandle from '../EventHandle';

class RemixVideo extends EventHandle {
  static propTypes = {
    uuid: PropTypes.string,
		parent: PropTypes.string,
		style: PropTypes.string,
		className: PropTypes.string,
		src: PropTypes.string,
		duration: PropTypes.number,
		controls: PropTypes.boolean,
		danmuList: PropTypes.array,
		danmuButton: PropTypes.boolean,
		enableDanmu: PropTypes.boolean,
		autoplay: PropTypes.boolean,
		loop: PropTypes.boolean,
		muted: PropTypes.boolean,
		initialTime: PropTypes.number,
		pageGesture: PropTypes.boolean,
		direction: PropTypes.number,
		showProgress: PropTypes.boolean,
		showFullscreenButton: PropTypes.boolean,
		showPlayButton: PropTypes.boolean,
		showCenterPlayButton: PropTypes.boolean,
		enableProgressGesture: PropTypes.boolean,
		objectFit: PropTypes.boolean,
		poster: PropTypes.string,
		showMuteButton: PropTypes.boolean,
		title: PropTypes.string,
		playButtonPosition: PropTypes.string,
		enablePlayGesture: PropTypes.boolean,
		autoPauseIfNavigate: PropTypes.boolean,
		autoPauseIfOpenNative: PropTypes.boolean,
		vslideGesture: PropTypes.boolean,
		vslideGestureInFullscreen: PropTypes.boolean,
		adUnitId: PropTypes.string,
		onTouchStart: PropTypes.string,
		onTouchMove: PropTypes.string,
		onTouchCancel: PropTypes.string,
		onTouchEnd: PropTypes.string,
		onTap: PropTypes.string,
		onLongPress: PropTypes.string,
		onLongTap: PropTypes.string,
		onTouchForceChange: PropTypes.string,
		onTransitionEnd: PropTypes.string,
		onAnimationStart: PropTypes.string,
		onAnimationIteration: PropTypes.string,
		onAnimationEnd: PropTypes.string,
		onPlay: PropTypes.string,
		onPause: PropTypes.string,
		onEnded: PropTypes.string,
		onTimeUpdate: PropTypes.string,
		onFullScreenChange: PropTypes.string,
		onWaiting: PropTypes.string,
		onError: PropTypes.string,
		onProgress: PropTypes.string,
		onLoadedMetaData: PropTypes.string
  }

  static defaultProps = {
    uuid: null,
		parent: null,
		style: null,
		className: null,
		src: null,
		duration: null,
		controls: true,
		danmuList: null,
		danmuButton: false,
		enableDanmu: false,
		autoplay: false,
		loop: false,
		muted: false,
		initialTime: 0,
		pageGesture: false,
		direction: null,
		showProgress: true,
		showFullscreenButton: true,
		showPlayButton: true,
		showCenterPlayButton: true,
		enableProgressGesture: true,
		objectFit: 0,
		poster: null,
		showMuteButton: false,
		title: null,
		playButtonPosition: 'bottom',
		enablePlayGesture: false,
		autoPauseIfNavigate: true,
		autoPauseIfOpenNative: true,
		vslideGesture: true,
		vslideGestureInFullscreen: true,
		adUnitId: null,
		onTouchStart: null,
		onTouchMove: null,
		onTouchCancel: null,
		onTouchEnd: null,
		onTap: null,
		onLongPress: null,
		onLongTap: null,
		onTouchForceChange: null,
		onTransitionEnd: null,
		onAnimationStart: null,
		onAnimationIteration: null,
		onAnimationEnd: null,
		onPlay: null,
		onPause: null,
		onEnded: null,
		onTimeUpdate: null,
		onFullScreenChange: null,
		onWaiting: null,
		onError: null,
		onProgress: null,
		onLoadedMetaData: null
  }

  render () {
    const {
      uuid,
			parent,
			style,
			className,
			src,
			duration,
			controls,
			danmuList,
			danmuButton,
			enableDanmu,
			autoplay,
			loop,
			muted,
			initialTime,
			pageGesture,
			direction,
			showProgress,
			showFullscreenButton,
			showPlayButton,
			showCenterPlayButton,
			enableProgressGesture,
			objectFit,
			poster,
			showMuteButton,
			title,
			playButtonPosition,
			enablePlayGesture,
			autoPauseIfNavigate,
			autoPauseIfOpenNative,
			vslideGesture,
			vslideGestureInFullscreen,
			adUnitId,
			onTouchStart,
			onTouchMove,
			onTouchCancel,
			onTouchEnd,
			onTap,
			onLongPress,
			onLongTap,
			onTouchForceChange,
			onTransitionEnd,
			onAnimationStart,
			onAnimationIteration,
			onAnimationEnd,
			onPlay,
			onPause,
			onEnded,
			onTimeUpdate,
			onFullScreenChange,
			onWaiting,
			onError,
			onProgress,
			onLoadedMetaData
    } = this.props;

    return (
      <video onTouchStart={onTouchStart ? 'onTouchStart' : null } onTouchMove={onTouchMove ? 'onTouchMove' : null } onTouchCancel={onTouchCancel ? 'onTouchCancel' : null } onTouchEnd={onTouchEnd ? 'onTouchEnd' : null } onTap={onTap ? 'onTap' : null } onLongPress={onLongPress ? 'onLongPress' : null } onLongTap={onLongTap ? 'onLongTap' : null } onTouchForceChange={onTouchForceChange ? 'onTouchForceChange' : null } onTransitionEnd={onTransitionEnd ? 'onTransitionEnd' : null } onAnimationStart={onAnimationStart ? 'onAnimationStart' : null } onAnimationIteration={onAnimationIteration ? 'onAnimationIteration' : null } onAnimationEnd={onAnimationEnd ? 'onAnimationEnd' : null } onPlay={onPlay ? 'onPlay' : null } onPause={onPause ? 'onPause' : null } onEnded={onEnded ? 'onEnded' : null } onTimeUpdate={onTimeUpdate ? 'onTimeUpdate' : null } onFullScreenChange={onFullScreenChange ? 'onFullScreenChange' : null } onWaiting={onWaiting ? 'onWaiting' : null } onError={onError ? 'onError' : null } onProgress={onProgress ? 'onProgress' : null } onLoadedMetaData={onLoadedMetaData ? 'onLoadedMetaData' : null } uuid={uuid} parent={parent} style={style} className={className} src={src} duration={duration} controls={controls} danmuList={danmuList} danmuButton={danmuButton} enableDanmu={enableDanmu} autoplay={autoplay} loop={loop} muted={muted} initialTime={initialTime} pageGesture={pageGesture} direction={direction} showProgress={showProgress} showFullscreenButton={showFullscreenButton} showPlayButton={showPlayButton} showCenterPlayButton={showCenterPlayButton} enableProgressGesture={enableProgressGesture} objectFit={objectFit} poster={poster} showMuteButton={showMuteButton} title={title} playButtonPosition={playButtonPosition} enablePlayGesture={enablePlayGesture} autoPauseIfNavigate={autoPauseIfNavigate} autoPauseIfOpenNative={autoPauseIfOpenNative} vslideGesture={vslideGesture} vslideGestureInFullscreen={vslideGestureInFullscreen} adUnitId={adUnitId} >
        {this.props.children}
      </video>
    );
  }
}

export default RemixVideo;
